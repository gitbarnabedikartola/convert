name: Video Processing

on:
  push:
    branches:
      - main

jobs:
  process-video:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        part: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get install -y ffmpeg bc

    - name: Calculate frame information
      id: frame_info
      run: |
        videoURL=https://videos.xivastudio.org/FlavioBriatore.mp4
        TOTAL_FRAMES=$(ffprobe -v error -select_streams v:0 -show_entries stream=nb_frames,avg_frame_rate -of default=noprint_wrappers=1:nokey=1 $videoURL | tail -n1)
        FRAMERATE=$(ffprobe -v error -select_streams v:0 -show_entries stream=avg_frame_rate -of default=noprint_wrappers=1:nokey=1 $videoURL)
        FPS=$(echo "scale=2; $FRAMERATE" | bc)
        FRAMES_POR_PARTE=$(($TOTAL_FRAMES / 20))
        RESTO=$(($TOTAL_FRAMES % 20))

        echo "TOTAL_FRAMES=$TOTAL_FRAMES" >> $GITHUB_ENV
        echo "FRAMES_POR_PARTE=$FRAMES_POR_PARTE" >> $GITHUB_ENV
        echo "RESTO=$RESTO" >> $GITHUB_ENV
        echo "FPS=$FPS" >> $GITHUB_ENV
        echo "videoURL=$videoURL" >> $GITHUB_ENV
        echo "videoName=$(basename "$(sed 's/\/ *$//;s/\.[^.]*$//' <<< $videoURL)")" >> $GITHUB_OUTPUT
        echo "videoName=$videoName"

    - name: Process part ${{ matrix.part }}
      run: |
        if (( ${{ matrix.part }} <= ${{ env.RESTO }} )); then
          FRAMES_ATUAIS=$((${{ env.FRAMES_POR_PARTE }} + 1))
        else
          FRAMES_ATUAIS=${{ env.FRAMES_POR_PARTE }}
        fi

        DURACAO=$(echo "scale=2; $FRAMES_ATUAIS / ${{ env.FPS }}" | bc)
        INICIO=0
        for ((i=1; i<${{ matrix.part }}; i++)); do
          if (( i <= ${{ env.RESTO }} )); then
            FRAMES_ATUAIS=$((${{ env.FRAMES_POR_PARTE }} + 1))
          else
            FRAMES_ATUAIS=${{ env.FRAMES_POR_PARTE }}
          fi
          DURACAO_INICIO=$(echo "scale=2; $FRAMES_ATUAIS / ${{ env.FPS }}" | bc)
          INICIO=$(echo "scale=2; $INICIO + $DURACAO_INICIO" | bc)
        done

        ffmpeg -ss "$INICIO" -i ${{ env.videoURL }} -t "$DURACAO" -c:v libx264 -c:a aac "parte_${{ matrix.part }}.mp4"

    - name: Upload part ${{ matrix.part }} output
      uses: actions/upload-artifact@v4
      with:
        name: part_${{ matrix.part }}
        path: |
          parte_${{ matrix.part }}.mp4

  concat-video:
    needs: process-video
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: convert/

    - name: Install dependencies
      run: sudo apt-get install -y ffmpeg

    - name: Concatenate video parts
      run: |
        cd convert/
        find -name "*.mp4" -exec mv {} . \;
        for dir in */; do
          rm -rf "$dir"
        done
        cd ..
        for f in convert/parte_*.mp4; do echo "file '$f'" >> filelist.txt; done
        while [ ! -f "filelist.txt" ]; do
          sleep 1
        done
        sort -t'_' -k2.6n filelist.txt -o filelist_sorted.txt
        while [ ! -f "filelist_sorted.txt" ]; do
          sleep 1
        done
        ffmpeg -f concat -safe 0 -i filelist_sorted.txt -c copy ${{ needs.process-video.outputs.video_name }}.mp4

    - name: Push to Repo
      shell: bash #-O extglob {0}
      run: |
        echo "## ssh setup"
        mkdir -p /home/runner/.ssh
        touch /home/runner/.ssh/github_actions
        chmod 600 /home/runner/.ssh/github_actions
        echo "${{ secrets.SSH_KEY }}" > /home/runner/.ssh/github_actions
        eval `ssh-agent -s`
        ssh-add /home/runner/.ssh/github_actions
        ssh-keyscan -t rsa -p ${{ secrets.SSH_PORT }} ${{ secrets.UPLOAD_HOST }} >> /home/runner/.ssh/known_hosts

        rsync -vaPpz ${{ needs.process-video.outputs.video_name }}.mp4 ${{ secrets.UPLOAD_USER }}@${{ secrets.UPLOAD_HOST }}:${{ secrets.UPLOAD_DIR }}

    - name: Setup TMATE Session
      uses: mxschmitt/action-tmate@v3

  delete-artifacts:
    needs: concat-video
    runs-on: ubuntu-latest
    steps:
    - name: Delete artifacts
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Lista todos os artifacts
        artifacts=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/artifacts | jq -r '.artifacts[] | select(.expired == false) | .id')

        # Loop para deletar cada artifact
        for artifact_id in $artifacts; do
          echo "Deleting artifact $artifact_id"
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id
        done
